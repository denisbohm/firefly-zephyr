/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_FIREFLY_HARDWARE_V1_HARDWARE_PB_H_INCLUDED
#define PB_FIREFLY_HARDWARE_V1_HARDWARE_PB_H_INCLUDED
#include <pb.h>
#include "options.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _firefly_hardware_v1_GetDeviceIdentifierRequest { 
    char dummy_field;
} firefly_hardware_v1_GetDeviceIdentifierRequest;

typedef struct _firefly_hardware_v1_ConfigurePortRequest { 
    char port[16];
    uint32_t pins;
    uint32_t flags;
} firefly_hardware_v1_ConfigurePortRequest;

typedef struct _firefly_hardware_v1_ConfigurePortResponse { 
    int32_t result;
} firefly_hardware_v1_ConfigurePortResponse;

typedef PB_BYTES_ARRAY_T(32) firefly_hardware_v1_GetDeviceIdentifierResponse_identifier_t;
typedef struct _firefly_hardware_v1_GetDeviceIdentifierResponse { 
    firefly_hardware_v1_GetDeviceIdentifierResponse_identifier_t identifier;
} firefly_hardware_v1_GetDeviceIdentifierResponse;

typedef struct _firefly_hardware_v1_GetPortRequest { 
    char port[16];
} firefly_hardware_v1_GetPortRequest;

typedef struct _firefly_hardware_v1_GetPortResponse { 
    int32_t result;
    uint32_t pins;
} firefly_hardware_v1_GetPortResponse;

typedef struct _firefly_hardware_v1_I2cOperationRead { 
    uint32_t flags;
    uint32_t length;
} firefly_hardware_v1_I2cOperationRead;

typedef PB_BYTES_ARRAY_T(64) firefly_hardware_v1_I2cOperationWrite_data_t;
typedef struct _firefly_hardware_v1_I2cOperationWrite { 
    uint32_t flags;
    firefly_hardware_v1_I2cOperationWrite_data_t data;
} firefly_hardware_v1_I2cOperationWrite;

typedef PB_BYTES_ARRAY_T(64) firefly_hardware_v1_I2cResultRead_data_t;
typedef struct _firefly_hardware_v1_I2cResultRead { 
    firefly_hardware_v1_I2cResultRead_data_t data;
} firefly_hardware_v1_I2cResultRead;

typedef struct _firefly_hardware_v1_SetPortRequest { 
    char port[16];
    uint32_t pins;
    uint32_t value;
} firefly_hardware_v1_SetPortRequest;

typedef struct _firefly_hardware_v1_SetPortResponse { 
    int32_t result;
} firefly_hardware_v1_SetPortResponse;

typedef struct _firefly_hardware_v1_SpiChipSelect { 
    char port[16];
    uint32_t pin;
    uint32_t flags;
} firefly_hardware_v1_SpiChipSelect;

typedef PB_BYTES_ARRAY_T(256) firefly_hardware_v1_SpiTransceiveResponse_data_t;
typedef struct _firefly_hardware_v1_SpiTransceiveResponse { 
    int32_t result;
    firefly_hardware_v1_SpiTransceiveResponse_data_t data;
} firefly_hardware_v1_SpiTransceiveResponse;

typedef struct _firefly_hardware_v1_I2cOperation { 
    pb_size_t which_msg;
    union {
        firefly_hardware_v1_I2cOperationRead read;
        firefly_hardware_v1_I2cOperationWrite write;
    } msg;
} firefly_hardware_v1_I2cOperation;

typedef struct _firefly_hardware_v1_I2cResult { 
    pb_size_t which_msg;
    union {
        firefly_hardware_v1_I2cResultRead read;
    } msg;
} firefly_hardware_v1_I2cResult;

typedef PB_BYTES_ARRAY_T(256) firefly_hardware_v1_SpiTransceiveRequest_data_t;
typedef struct _firefly_hardware_v1_SpiTransceiveRequest { 
    char device[16];
    uint32_t frequency;
    uint32_t operation;
    bool has_chip_select;
    firefly_hardware_v1_SpiChipSelect chip_select;
    firefly_hardware_v1_SpiTransceiveRequest_data_t data;
} firefly_hardware_v1_SpiTransceiveRequest;

typedef struct _firefly_hardware_v1_I2cTransferRequest { 
    char device[16];
    uint32_t address;
    uint32_t frequency;
    pb_size_t operations_count;
    firefly_hardware_v1_I2cOperation operations[4];
} firefly_hardware_v1_I2cTransferRequest;

typedef struct _firefly_hardware_v1_I2cTransferResponse { 
    int32_t result;
    pb_size_t results_count;
    firefly_hardware_v1_I2cResult results[4];
} firefly_hardware_v1_I2cTransferResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define firefly_hardware_v1_GetDeviceIdentifierRequest_init_default {0}
#define firefly_hardware_v1_GetDeviceIdentifierResponse_init_default {{0, {0}}}
#define firefly_hardware_v1_ConfigurePortRequest_init_default {"", 0, 0}
#define firefly_hardware_v1_ConfigurePortResponse_init_default {0}
#define firefly_hardware_v1_GetPortRequest_init_default {""}
#define firefly_hardware_v1_GetPortResponse_init_default {0, 0}
#define firefly_hardware_v1_SetPortRequest_init_default {"", 0, 0}
#define firefly_hardware_v1_SetPortResponse_init_default {0}
#define firefly_hardware_v1_SpiChipSelect_init_default {"", 0, 0}
#define firefly_hardware_v1_SpiTransceiveRequest_init_default {"", 0, 0, false, firefly_hardware_v1_SpiChipSelect_init_default, {0, {0}}}
#define firefly_hardware_v1_SpiTransceiveResponse_init_default {0, {0, {0}}}
#define firefly_hardware_v1_I2cOperationRead_init_default {0, 0}
#define firefly_hardware_v1_I2cResultRead_init_default {{0, {0}}}
#define firefly_hardware_v1_I2cOperationWrite_init_default {0, {0, {0}}}
#define firefly_hardware_v1_I2cResult_init_default {0, {firefly_hardware_v1_I2cResultRead_init_default}}
#define firefly_hardware_v1_I2cOperation_init_default {0, {firefly_hardware_v1_I2cOperationRead_init_default}}
#define firefly_hardware_v1_I2cTransferRequest_init_default {"", 0, 0, 0, {firefly_hardware_v1_I2cOperation_init_default, firefly_hardware_v1_I2cOperation_init_default, firefly_hardware_v1_I2cOperation_init_default, firefly_hardware_v1_I2cOperation_init_default}}
#define firefly_hardware_v1_I2cTransferResponse_init_default {0, 0, {firefly_hardware_v1_I2cResult_init_default, firefly_hardware_v1_I2cResult_init_default, firefly_hardware_v1_I2cResult_init_default, firefly_hardware_v1_I2cResult_init_default}}
#define firefly_hardware_v1_GetDeviceIdentifierRequest_init_zero {0}
#define firefly_hardware_v1_GetDeviceIdentifierResponse_init_zero {{0, {0}}}
#define firefly_hardware_v1_ConfigurePortRequest_init_zero {"", 0, 0}
#define firefly_hardware_v1_ConfigurePortResponse_init_zero {0}
#define firefly_hardware_v1_GetPortRequest_init_zero {""}
#define firefly_hardware_v1_GetPortResponse_init_zero {0, 0}
#define firefly_hardware_v1_SetPortRequest_init_zero {"", 0, 0}
#define firefly_hardware_v1_SetPortResponse_init_zero {0}
#define firefly_hardware_v1_SpiChipSelect_init_zero {"", 0, 0}
#define firefly_hardware_v1_SpiTransceiveRequest_init_zero {"", 0, 0, false, firefly_hardware_v1_SpiChipSelect_init_zero, {0, {0}}}
#define firefly_hardware_v1_SpiTransceiveResponse_init_zero {0, {0, {0}}}
#define firefly_hardware_v1_I2cOperationRead_init_zero {0, 0}
#define firefly_hardware_v1_I2cResultRead_init_zero {{0, {0}}}
#define firefly_hardware_v1_I2cOperationWrite_init_zero {0, {0, {0}}}
#define firefly_hardware_v1_I2cResult_init_zero  {0, {firefly_hardware_v1_I2cResultRead_init_zero}}
#define firefly_hardware_v1_I2cOperation_init_zero {0, {firefly_hardware_v1_I2cOperationRead_init_zero}}
#define firefly_hardware_v1_I2cTransferRequest_init_zero {"", 0, 0, 0, {firefly_hardware_v1_I2cOperation_init_zero, firefly_hardware_v1_I2cOperation_init_zero, firefly_hardware_v1_I2cOperation_init_zero, firefly_hardware_v1_I2cOperation_init_zero}}
#define firefly_hardware_v1_I2cTransferResponse_init_zero {0, 0, {firefly_hardware_v1_I2cResult_init_zero, firefly_hardware_v1_I2cResult_init_zero, firefly_hardware_v1_I2cResult_init_zero, firefly_hardware_v1_I2cResult_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define firefly_hardware_v1_ConfigurePortRequest_port_tag 1
#define firefly_hardware_v1_ConfigurePortRequest_pins_tag 2
#define firefly_hardware_v1_ConfigurePortRequest_flags_tag 3
#define firefly_hardware_v1_ConfigurePortResponse_result_tag 1
#define firefly_hardware_v1_GetDeviceIdentifierResponse_identifier_tag 1
#define firefly_hardware_v1_GetPortRequest_port_tag 1
#define firefly_hardware_v1_GetPortResponse_result_tag 1
#define firefly_hardware_v1_GetPortResponse_pins_tag 2
#define firefly_hardware_v1_I2cOperationRead_flags_tag 1
#define firefly_hardware_v1_I2cOperationRead_length_tag 2
#define firefly_hardware_v1_I2cOperationWrite_flags_tag 1
#define firefly_hardware_v1_I2cOperationWrite_data_tag 2
#define firefly_hardware_v1_I2cResultRead_data_tag 1
#define firefly_hardware_v1_SetPortRequest_port_tag 1
#define firefly_hardware_v1_SetPortRequest_pins_tag 2
#define firefly_hardware_v1_SetPortRequest_value_tag 3
#define firefly_hardware_v1_SetPortResponse_result_tag 1
#define firefly_hardware_v1_SpiChipSelect_port_tag 1
#define firefly_hardware_v1_SpiChipSelect_pin_tag 2
#define firefly_hardware_v1_SpiChipSelect_flags_tag 3
#define firefly_hardware_v1_SpiTransceiveResponse_result_tag 1
#define firefly_hardware_v1_SpiTransceiveResponse_data_tag 2
#define firefly_hardware_v1_I2cOperation_read_tag 1
#define firefly_hardware_v1_I2cOperation_write_tag 2
#define firefly_hardware_v1_I2cResult_read_tag   1
#define firefly_hardware_v1_SpiTransceiveRequest_device_tag 1
#define firefly_hardware_v1_SpiTransceiveRequest_frequency_tag 2
#define firefly_hardware_v1_SpiTransceiveRequest_operation_tag 3
#define firefly_hardware_v1_SpiTransceiveRequest_chip_select_tag 4
#define firefly_hardware_v1_SpiTransceiveRequest_data_tag 5
#define firefly_hardware_v1_I2cTransferRequest_device_tag 1
#define firefly_hardware_v1_I2cTransferRequest_address_tag 2
#define firefly_hardware_v1_I2cTransferRequest_frequency_tag 3
#define firefly_hardware_v1_I2cTransferRequest_operations_tag 4
#define firefly_hardware_v1_I2cTransferResponse_result_tag 1
#define firefly_hardware_v1_I2cTransferResponse_results_tag 4

/* Struct field encoding specification for nanopb */
#define firefly_hardware_v1_GetDeviceIdentifierRequest_FIELDLIST(X, a) \

#define firefly_hardware_v1_GetDeviceIdentifierRequest_CALLBACK NULL
#define firefly_hardware_v1_GetDeviceIdentifierRequest_DEFAULT NULL

#define firefly_hardware_v1_GetDeviceIdentifierResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    identifier,        1)
#define firefly_hardware_v1_GetDeviceIdentifierResponse_CALLBACK NULL
#define firefly_hardware_v1_GetDeviceIdentifierResponse_DEFAULT NULL

#define firefly_hardware_v1_ConfigurePortRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   port,              1) \
X(a, STATIC,   SINGULAR, UINT32,   pins,              2) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             3)
#define firefly_hardware_v1_ConfigurePortRequest_CALLBACK NULL
#define firefly_hardware_v1_ConfigurePortRequest_DEFAULT NULL

#define firefly_hardware_v1_ConfigurePortResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1)
#define firefly_hardware_v1_ConfigurePortResponse_CALLBACK NULL
#define firefly_hardware_v1_ConfigurePortResponse_DEFAULT NULL

#define firefly_hardware_v1_GetPortRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   port,              1)
#define firefly_hardware_v1_GetPortRequest_CALLBACK NULL
#define firefly_hardware_v1_GetPortRequest_DEFAULT NULL

#define firefly_hardware_v1_GetPortResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1) \
X(a, STATIC,   SINGULAR, UINT32,   pins,              2)
#define firefly_hardware_v1_GetPortResponse_CALLBACK NULL
#define firefly_hardware_v1_GetPortResponse_DEFAULT NULL

#define firefly_hardware_v1_SetPortRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   port,              1) \
X(a, STATIC,   SINGULAR, UINT32,   pins,              2) \
X(a, STATIC,   SINGULAR, UINT32,   value,             3)
#define firefly_hardware_v1_SetPortRequest_CALLBACK NULL
#define firefly_hardware_v1_SetPortRequest_DEFAULT NULL

#define firefly_hardware_v1_SetPortResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1)
#define firefly_hardware_v1_SetPortResponse_CALLBACK NULL
#define firefly_hardware_v1_SetPortResponse_DEFAULT NULL

#define firefly_hardware_v1_SpiChipSelect_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   port,              1) \
X(a, STATIC,   SINGULAR, UINT32,   pin,               2) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             3)
#define firefly_hardware_v1_SpiChipSelect_CALLBACK NULL
#define firefly_hardware_v1_SpiChipSelect_DEFAULT NULL

#define firefly_hardware_v1_SpiTransceiveRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   device,            1) \
X(a, STATIC,   SINGULAR, UINT32,   frequency,         2) \
X(a, STATIC,   SINGULAR, UINT32,   operation,         3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  chip_select,       4) \
X(a, STATIC,   SINGULAR, BYTES,    data,              5)
#define firefly_hardware_v1_SpiTransceiveRequest_CALLBACK NULL
#define firefly_hardware_v1_SpiTransceiveRequest_DEFAULT NULL
#define firefly_hardware_v1_SpiTransceiveRequest_chip_select_MSGTYPE firefly_hardware_v1_SpiChipSelect

#define firefly_hardware_v1_SpiTransceiveResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1) \
X(a, STATIC,   SINGULAR, BYTES,    data,              2)
#define firefly_hardware_v1_SpiTransceiveResponse_CALLBACK NULL
#define firefly_hardware_v1_SpiTransceiveResponse_DEFAULT NULL

#define firefly_hardware_v1_I2cOperationRead_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             1) \
X(a, STATIC,   SINGULAR, UINT32,   length,            2)
#define firefly_hardware_v1_I2cOperationRead_CALLBACK NULL
#define firefly_hardware_v1_I2cOperationRead_DEFAULT NULL

#define firefly_hardware_v1_I2cResultRead_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    data,              1)
#define firefly_hardware_v1_I2cResultRead_CALLBACK NULL
#define firefly_hardware_v1_I2cResultRead_DEFAULT NULL

#define firefly_hardware_v1_I2cOperationWrite_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             1) \
X(a, STATIC,   SINGULAR, BYTES,    data,              2)
#define firefly_hardware_v1_I2cOperationWrite_CALLBACK NULL
#define firefly_hardware_v1_I2cOperationWrite_DEFAULT NULL

#define firefly_hardware_v1_I2cResult_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,read,msg.read),   1)
#define firefly_hardware_v1_I2cResult_CALLBACK NULL
#define firefly_hardware_v1_I2cResult_DEFAULT NULL
#define firefly_hardware_v1_I2cResult_msg_read_MSGTYPE firefly_hardware_v1_I2cResultRead

#define firefly_hardware_v1_I2cOperation_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,read,msg.read),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,write,msg.write),   2)
#define firefly_hardware_v1_I2cOperation_CALLBACK NULL
#define firefly_hardware_v1_I2cOperation_DEFAULT NULL
#define firefly_hardware_v1_I2cOperation_msg_read_MSGTYPE firefly_hardware_v1_I2cOperationRead
#define firefly_hardware_v1_I2cOperation_msg_write_MSGTYPE firefly_hardware_v1_I2cOperationWrite

#define firefly_hardware_v1_I2cTransferRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   device,            1) \
X(a, STATIC,   SINGULAR, UINT32,   address,           2) \
X(a, STATIC,   SINGULAR, UINT32,   frequency,         3) \
X(a, STATIC,   REPEATED, MESSAGE,  operations,        4)
#define firefly_hardware_v1_I2cTransferRequest_CALLBACK NULL
#define firefly_hardware_v1_I2cTransferRequest_DEFAULT NULL
#define firefly_hardware_v1_I2cTransferRequest_operations_MSGTYPE firefly_hardware_v1_I2cOperation

#define firefly_hardware_v1_I2cTransferResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1) \
X(a, STATIC,   REPEATED, MESSAGE,  results,           4)
#define firefly_hardware_v1_I2cTransferResponse_CALLBACK NULL
#define firefly_hardware_v1_I2cTransferResponse_DEFAULT NULL
#define firefly_hardware_v1_I2cTransferResponse_results_MSGTYPE firefly_hardware_v1_I2cResult

extern const pb_msgdesc_t firefly_hardware_v1_GetDeviceIdentifierRequest_msg;
extern const pb_msgdesc_t firefly_hardware_v1_GetDeviceIdentifierResponse_msg;
extern const pb_msgdesc_t firefly_hardware_v1_ConfigurePortRequest_msg;
extern const pb_msgdesc_t firefly_hardware_v1_ConfigurePortResponse_msg;
extern const pb_msgdesc_t firefly_hardware_v1_GetPortRequest_msg;
extern const pb_msgdesc_t firefly_hardware_v1_GetPortResponse_msg;
extern const pb_msgdesc_t firefly_hardware_v1_SetPortRequest_msg;
extern const pb_msgdesc_t firefly_hardware_v1_SetPortResponse_msg;
extern const pb_msgdesc_t firefly_hardware_v1_SpiChipSelect_msg;
extern const pb_msgdesc_t firefly_hardware_v1_SpiTransceiveRequest_msg;
extern const pb_msgdesc_t firefly_hardware_v1_SpiTransceiveResponse_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cOperationRead_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cResultRead_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cOperationWrite_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cResult_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cOperation_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cTransferRequest_msg;
extern const pb_msgdesc_t firefly_hardware_v1_I2cTransferResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define firefly_hardware_v1_GetDeviceIdentifierRequest_fields &firefly_hardware_v1_GetDeviceIdentifierRequest_msg
#define firefly_hardware_v1_GetDeviceIdentifierResponse_fields &firefly_hardware_v1_GetDeviceIdentifierResponse_msg
#define firefly_hardware_v1_ConfigurePortRequest_fields &firefly_hardware_v1_ConfigurePortRequest_msg
#define firefly_hardware_v1_ConfigurePortResponse_fields &firefly_hardware_v1_ConfigurePortResponse_msg
#define firefly_hardware_v1_GetPortRequest_fields &firefly_hardware_v1_GetPortRequest_msg
#define firefly_hardware_v1_GetPortResponse_fields &firefly_hardware_v1_GetPortResponse_msg
#define firefly_hardware_v1_SetPortRequest_fields &firefly_hardware_v1_SetPortRequest_msg
#define firefly_hardware_v1_SetPortResponse_fields &firefly_hardware_v1_SetPortResponse_msg
#define firefly_hardware_v1_SpiChipSelect_fields &firefly_hardware_v1_SpiChipSelect_msg
#define firefly_hardware_v1_SpiTransceiveRequest_fields &firefly_hardware_v1_SpiTransceiveRequest_msg
#define firefly_hardware_v1_SpiTransceiveResponse_fields &firefly_hardware_v1_SpiTransceiveResponse_msg
#define firefly_hardware_v1_I2cOperationRead_fields &firefly_hardware_v1_I2cOperationRead_msg
#define firefly_hardware_v1_I2cResultRead_fields &firefly_hardware_v1_I2cResultRead_msg
#define firefly_hardware_v1_I2cOperationWrite_fields &firefly_hardware_v1_I2cOperationWrite_msg
#define firefly_hardware_v1_I2cResult_fields &firefly_hardware_v1_I2cResult_msg
#define firefly_hardware_v1_I2cOperation_fields &firefly_hardware_v1_I2cOperation_msg
#define firefly_hardware_v1_I2cTransferRequest_fields &firefly_hardware_v1_I2cTransferRequest_msg
#define firefly_hardware_v1_I2cTransferResponse_fields &firefly_hardware_v1_I2cTransferResponse_msg

/* Maximum encoded size of messages (where known) */
#define firefly_hardware_v1_ConfigurePortRequest_size 29
#define firefly_hardware_v1_ConfigurePortResponse_size 11
#define firefly_hardware_v1_GetDeviceIdentifierRequest_size 0
#define firefly_hardware_v1_GetDeviceIdentifierResponse_size 34
#define firefly_hardware_v1_GetPortRequest_size  17
#define firefly_hardware_v1_GetPortResponse_size 17
#define firefly_hardware_v1_I2cOperationRead_size 12
#define firefly_hardware_v1_I2cOperationWrite_size 72
#define firefly_hardware_v1_I2cOperation_size    74
#define firefly_hardware_v1_I2cResultRead_size   66
#define firefly_hardware_v1_I2cResult_size       68
#define firefly_hardware_v1_I2cTransferRequest_size 333
#define firefly_hardware_v1_I2cTransferResponse_size 291
#define firefly_hardware_v1_SetPortRequest_size  29
#define firefly_hardware_v1_SetPortResponse_size 11
#define firefly_hardware_v1_SpiChipSelect_size   29
#define firefly_hardware_v1_SpiTransceiveRequest_size 319
#define firefly_hardware_v1_SpiTransceiveResponse_size 270

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
