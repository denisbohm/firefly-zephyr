/ {
	chosen {
        firefly,trigger=&button_trigger;
        firefly,rc_led_eyes_blue=&led_pwm_1;
        firefly,rc_led_eyes_red=&led_pwm_2;
        firefly,rc_pwm_eyes=&rc_pwm_1;
        firefly,rc_pwm_jaw=&rc_pwm_2;
        firefly,water_pump=&water_pump;

        firefly,spi_display_bl=&gc9a01_bl;
        firefly,spi_display_res=&gc9a01_res;
        firefly,spi_display_cs=&gc9a01_cs;
        firefly,spi_display_dcn=&gc9a01_dcn;
        firefly,spi_display_sck=&gc9a01_sck;
        firefly,spi_display_mosi=&gc9a01_mosi;
        firefly,spi_display_miso=&gc9a01_miso;

        firefly_cst816s_i2c=&i2c1;
        firefly,cst816s_sda=&cst816s_sda;
        firefly,cst816s_scl=&cst816s_scl;
        firefly,cst816s_int=&cst816s_int;
        firefly,cst816s_rst=&cst816s_rst;
    };

    buttons {
		compatible = "gpio-keys";
        
		button_trigger: button_trigger {
			gpios = <&gpio1 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			label = "Push button trigger";
		};
    };

    pwm_leds {
        compatible = "pwm-leds";

        led_pwm_1: led_pwm_1 {
            pwms = <&pwm1 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
            label = "LED PWM 1";
        };
        led_pwm_2: led_pwm_2 {
            pwms = <&pwm1 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
            label = "LED PWM 2";
        };

        rc_pwm_1: rc_pwm_1 {
            pwms = <&pwm2 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
            label = "RC PWM 1";
        };
        rc_pwm_2: rc_pwm_2 {
            pwms = <&pwm2 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
            label = "RC PWM 2";
        };
    };
    
    outputs {
        compatible = "gpio-leds";

        water_pump: water_pump {
            gpios = <&gpio0 27 GPIO_ACTIVE_HIGH>;
        };

        gc9a01_res: gc9a01_res {
            gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
        };
        gc9a01_cs: gc9a01_cs {
            gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
        };
        gc9a01_dcn: gc9a01_dcn {
            gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
        };
        gc9a01_sck: gc9a01_sck {
            gpios = <&gpio1 6 GPIO_ACTIVE_HIGH>;
        };
        gc9a01_mosi: gc9a01_mosi {
            gpios = <&gpio1 7 GPIO_ACTIVE_HIGH>;
        };
        gc9a01_miso: gc9a01_miso {
            gpios = <&gpio1 8 GPIO_ACTIVE_HIGH>;
        };
        gc9a01_bl: gc9a01_bl {
            gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>;
        };

        cst816s_sda: cst816s_sda {
            gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;
        };
        cst816s_scl: cst816s_scl {
            gpios = <&gpio1 12 GPIO_ACTIVE_HIGH>;
        };
        
        cst816s_int: cst816s_int {
            gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
        };
        cst816s_rst: cst816s_rst {
            gpios = <&gpio1 10 GPIO_ACTIVE_LOW>;
        };
    };

};

&gpio0 {
	status = "okay";
	label = "GPIO_0";
};

&gpio1 {
	status = "okay";
	label = "GPIO_1";
};

&pinctrl {
    spi2_default: spi2_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 1, 6)>, <NRF_PSEL(SPIM_MISO, 1, 8)>, <NRF_PSEL(SPIM_MOSI, 1, 7)>;
		};
	};

	spi2_sleep: spi2_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 1, 6)>, <NRF_PSEL(SPIM_MISO, 1, 8)>, <NRF_PSEL(SPIM_MOSI, 1, 7)>;
			low-power-enable;
		};
	};

	i2c1_default: i2c1_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 1, 13)>, <NRF_PSEL(TWIM_SCL, 1, 12)>;
            bias-pull-up;
		};
	};

	i2c1_sleep: i2c1_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 1, 13)>, <NRF_PSEL(TWIM_SCL, 01, 12)>;
            bias-pull-up;
			low-power-enable;
		};
	};
};

&spi2 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	pinctrl-0 = <&spi2_default>;
	pinctrl-1 = <&spi2_sleep>;
	pinctrl-names = "default", "sleep";
};

&i2c1 {
	compatible = "nordic,nrf-twim";
	status = "okay";
	pinctrl-0 = <&i2c1_default>;
	pinctrl-1 = <&i2c1_sleep>;
	pinctrl-names = "default", "sleep";
	clock-frequency = <I2C_BITRATE_STANDARD>;
};

&pinctrl {

    pwm1_led_default: pwm1_led_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 14)>, <NRF_PSEL(PWM_OUT1, 1, 15)>;
		};
	};

	pwm1_led_sleep: pwm1_led_sleep {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 14)>, <NRF_PSEL(PWM_OUT1, 1, 15)>;
		};
	};

    pwm2_esc_default: pwm2_esc_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 2)>, <NRF_PSEL(PWM_OUT1, 1, 3)>;
		};
	};

	pwm2_esc_sleep: pwm2_esc_sleep {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 2)>, <NRF_PSEL(PWM_OUT1, 1, 3)>;
		};
	};

};

&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_led_default>;
	pinctrl-1 = <&pwm1_led_sleep>;
	pinctrl-names = "default", "sleep";
};

&pwm2 {
	status = "okay";
	pinctrl-0 = <&pwm2_esc_default>;
	pinctrl-1 = <&pwm2_esc_sleep>;
	pinctrl-names = "default", "sleep";
};


&zephyr_udc0 {
	cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};

/delete-node/ &slot0_partition;

&flash0 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

        // 1 MB Available
        //
        // 256 KB for boot loader
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x00040000>;
		};
        // 752 KB for application
        slot0_partition: partition@40000 {
            label = "image-0";
            reg = <0x040000 0x00bc000>;
        };
        // 4 KB for manufacturing configuration (one 4 KB pages)
        configuration_partition: partition@fc000 {
            label = "configuration";
            reg = <0x000fc000 0x00001000>;
        };
        // 12 KB for application key / value dictionary (three 4 KB pages)
        persist_partition: partition@fd000 {
            label = "persist";
            reg = <0x000fd000 0x00003000>;
        };
	};
};
